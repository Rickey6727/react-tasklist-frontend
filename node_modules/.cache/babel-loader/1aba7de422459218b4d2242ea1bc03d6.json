{"ast":null,"code":"var _jsxFileName = \"/Users/ririki-nakabayashi/task-list/client/src/js/Edit.jsx\";\nimport React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      title: '',\n      content: '',\n      category: 0,\n      limit: new Date(),\n      categorys: []\n    };\n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.taskCategoryChange = this.taskCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    request.post('http://localhost:4000/posts/edit').type('form').send({\n      id: this.props.match.params.id\n    }).end((err, res) => {\n      var limitDate = new Date(res.body[0].limit_date);\n      this.setState({\n        id: res.body[0].id\n      });\n      this.setState({\n        title: res.body[0].title\n      });\n      this.setState({\n        content: res.body[0].content\n      });\n      this.setState({\n        category: res.body[0].category\n      });\n      this.setState({\n        limit: limitDate\n      });\n    });\n    request.get('http://localhost:4000/categorys').end((err, res) => {\n      var categorys = res.body;\n      this.setState({\n        categorys\n      });\n    });\n  }\n\n  taskTitleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  taskContentChange(event) {\n    this.setState({\n      content: event.target.value\n    });\n  }\n\n  taskCategoryChange(event) {\n    this.setState({\n      category: event\n    });\n  }\n\n  taskLimitChange(date) {\n    this.setState({\n      limit: date\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"来てます\");\n    var date = this.state.limit;\n    var y = date.getFullYear();\n    var m = (\"00\" + (date.getMonth() + 1)).slice(-2);\n    var d = (\"00\" + date.getDate()).slice(-2);\n    var limitDate = y + \"-\" + m + \"-\" + d;\n    request.post('http://localhost:4000/update').type('form').send({\n      type: this.props.status,\n      id: this.state.id,\n      title: this.state.title,\n      content: this.state.content,\n      category: this.state.category,\n      limit: limitDate\n    }).end((err, res) => {\n      alert(\"タスクを変更しました\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"task-editer-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Cansel\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"TaskTitle:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.taskTitleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"TaskDesc:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      value: this.state.content,\n      onChange: this.taskContentChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"TaskCategory:\", React.createElement(\"select\", {\n      value: this.state.category,\n      onChange: e => this.setState({\n        category: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u6307\\u5B9A\\u306A\\u3057\"), this.state.categorys.map(category => React.createElement(\"option\", {\n      value: category.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, category.title)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"LimitDate:\", React.createElement(DatePicker, {\n      selected: this.state.limit,\n      onChange: this.taskLimitChange,\n      dateFormat: \"yyyy-MM-dd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u8FFD\\u52A0\\uFF01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/ririki-nakabayashi/task-list/client/src/js/Edit.jsx"],"names":["React","request","DatePicker","BrowserRouter","Router","Route","Link","Edit","Component","constructor","props","state","id","title","content","category","limit","Date","categorys","taskTitleChange","bind","taskContentChange","taskLimitChange","taskCategoryChange","handleSubmit","post","type","send","match","params","end","err","res","limitDate","body","limit_date","setState","get","event","target","value","date","console","log","y","getFullYear","m","getMonth","slice","d","getDate","status","alert","render","e","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AAEA,eAAe,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,CADO;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,QAAQ,EAAE,CAJC;AAKXC,MAAAA,KAAK,EAAE,IAAIC,IAAJ,EALI;AAMXC,MAAAA,SAAS,EAAE;AANA,KAAb;AASA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBH,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AAEAnB,IAAAA,OAAO,CACJwB,IADH,CACQ,kCADR,EAEGC,IAFH,CAEQ,MAFR,EAGGC,IAHH,CAGQ;AACJf,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwBjB;AADxB,KAHR,EAMGkB,GANH,CAMO,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjB,UAAIC,SAAS,GAAG,IAAIhB,IAAJ,CAASe,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYC,UAArB,CAAhB;AACA,WAAKC,QAAL,CAAc;AAACxB,QAAAA,EAAE,EAAEoB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYtB;AAAjB,OAAd;AACA,WAAKwB,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAAEmB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYrB;AAApB,OAAd;AACA,WAAKuB,QAAL,CAAc;AAACtB,QAAAA,OAAO,EAAEkB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYpB;AAAtB,OAAd;AACA,WAAKsB,QAAL,CAAc;AAACrB,QAAAA,QAAQ,EAAEiB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYnB;AAAvB,OAAd;AACA,WAAKqB,QAAL,CAAc;AAACpB,QAAAA,KAAK,EAAEiB;AAAR,OAAd;AACD,KAbH;AAeAhC,IAAAA,OAAO,CACFoC,GADL,CACS,iCADT,EAEKP,GAFL,CAES,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,UAAId,SAAS,GAAGc,GAAG,CAACE,IAApB;AACA,WAAKE,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd;AACH,KALL;AAOD;;AAEDC,EAAAA,eAAe,CAACmB,KAAD,EAAQ;AACrB,SAAKF,QAAL,CAAc;AAACvB,MAAAA,KAAK,EAAEyB,KAAK,CAACC,MAAN,CAAaC;AAArB,KAAd;AACD;;AAEDnB,EAAAA,iBAAiB,CAACiB,KAAD,EAAQ;AACvB,SAAKF,QAAL,CAAc;AAACtB,MAAAA,OAAO,EAAEwB,KAAK,CAACC,MAAN,CAAaC;AAAvB,KAAd;AACD;;AAEDjB,EAAAA,kBAAkB,CAACe,KAAD,EAAQ;AACxB,SAAKF,QAAL,CAAc;AAACrB,MAAAA,QAAQ,EAAEuB;AAAX,KAAd;AACD;;AAEDhB,EAAAA,eAAe,CAACmB,IAAD,EAAO;AACpB,SAAKL,QAAL,CAAc;AAACpB,MAAAA,KAAK,EAAEyB;AAAR,KAAd;AACD;;AAEDjB,EAAAA,YAAY,CAACc,KAAD,EAAQ;AAClBI,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIF,IAAI,GAAG,KAAK9B,KAAL,CAAWK,KAAtB;AACA,QAAI4B,CAAC,GAAGH,IAAI,CAACI,WAAL,EAAR;AACA,QAAIC,CAAC,GAAG,CAAC,QAAQL,IAAI,CAACM,QAAL,KAAgB,CAAxB,CAAD,EAA6BC,KAA7B,CAAmC,CAAC,CAApC,CAAR;AACA,QAAIC,CAAC,GAAG,CAAC,OAAOR,IAAI,CAACS,OAAL,EAAR,EAAwBF,KAAxB,CAA8B,CAAC,CAA/B,CAAR;AACA,QAAIf,SAAS,GAAGW,CAAC,GAAG,GAAJ,GAAUE,CAAV,GAAc,GAAd,GAAoBG,CAApC;AACAhD,IAAAA,OAAO,CACJwB,IADH,CACQ,8BADR,EAEGC,IAFH,CAEQ,MAFR,EAGGC,IAHH,CAGQ;AACJD,MAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWyC,MADb;AAEJvC,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EAFX;AAGJC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHd;AAIJC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAJhB;AAKJC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QALjB;AAMJC,MAAAA,KAAK,EAAEiB;AANH,KAHR,EAWGH,GAXH,CAWO,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjBoB,MAAAA,KAAK,CAAC,YAAD,CAAL;AACD,KAbH;AAcD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGE;AAAM,MAAA,QAAQ,EAAE,KAAK7B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAA2C,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,KAA7D;AAAoE,MAAA,QAAQ,EAAE,KAAKM,eAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,SAAtB;AAAgC,MAAA,IAAI,EAAC,SAArC;AAA+C,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,OAAjE;AAA0E,MAAA,QAAQ,EAAE,KAAKO,iBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AACA,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWI,QADlB;AAEA,MAAA,QAAQ,EAAGuC,CAAC,IAAI,KAAKlB,QAAL,CAAc;AAACrB,QAAAA,QAAQ,EAAEuC,CAAC,CAACf,MAAF,CAASC;AAApB,OAAd,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHF,EAIG,KAAK7B,KAAL,CAAWO,SAAX,CAAqBqC,GAArB,CAAyBxC,QAAQ,IAC9B;AAAQ,MAAA,KAAK,EAAEA,QAAQ,CAACH,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BG,QAAQ,CAACF,KAAtC,CADH,CAJH,CAFF,CATF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWK,KADvB;AAEE,MAAA,QAAQ,EAAE,KAAKM,eAFjB;AAGE,MAAA,UAAU,EAAC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,EA4BE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,CAHF,CADF;AAoCD;;AAtH+C","sourcesContent":["import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      id: 0,\n      title: '',\n      content: '',\n      category: 0,\n      limit: new Date(),\n      categorys: []\n    };\n    \n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.taskCategoryChange = this.taskCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    request\n      .post('http://localhost:4000/posts/edit')\n      .type('form')\n      .send({\n        id: this.props.match.params.id\n      })\n      .end((err, res) => {\n        var limitDate = new Date(res.body[0].limit_date);\n        this.setState({id: res.body[0].id});\n        this.setState({title: res.body[0].title});\n        this.setState({content: res.body[0].content});\n        this.setState({category: res.body[0].category});\n        this.setState({limit: limitDate});\n      });\n\n    request\n        .get('http://localhost:4000/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n\n  }\n\n  taskTitleChange(event) {\n    this.setState({title: event.target.value});\n  }\n\n  taskContentChange(event) {\n    this.setState({content: event.target.value});\n  }\n\n  taskCategoryChange(event) {\n    this.setState({category: event});\n  }\n\n  taskLimitChange(date) {\n    this.setState({limit: date});\n  }\n\n  handleSubmit(event) {\n    console.log(\"来てます\");\n    var date = this.state.limit\n    var y = date.getFullYear();\n    var m = (\"00\" + (date.getMonth()+1)).slice(-2);\n    var d = (\"00\" + date.getDate()).slice(-2);\n    var limitDate = y + \"-\" + m + \"-\" + d;\n    request\n      .post('http://localhost:4000/update')\n      .type('form')\n      .send({\n        type: this.props.status,\n        id: this.state.id,\n        title: this.state.title,\n        content: this.state.content,\n        category: this.state.category,\n        limit: limitDate\n      })\n      .end((err, res) => {\n        alert(\"タスクを変更しました\");\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"task-editer-edit\">\n        <Link to=\"/\">Cansel</Link>\n          <h1>EDIT</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            TaskTitle:\n            <input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.taskTitleChange} />\n          </label>\n          <label>\n            TaskDesc:\n            <input type=\"text\" id=\"content\" name=\"content\" value={this.state.content} onChange={this.taskContentChange} />\n          </label>\n          <label>\n            TaskCategory:\n            <select\n            value={this.state.category}\n            onChange={ e => this.setState({category: e.target.value}) }>\n              <option value=\"0\">指定なし</option>\n              {this.state.categorys.map(category => (\n                  <option value={category.id}>{category.title}</option>\n              ))}\n            </select>\n          </label>\n          <label>\n            LimitDate:\n            <DatePicker\n              selected={this.state.limit}\n              onChange={this.taskLimitChange}\n              dateFormat=\"yyyy-MM-dd\"\n            />\n          </label>\n          <input type=\"submit\" value=\"追加！\" />\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}