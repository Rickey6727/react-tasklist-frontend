{"ast":null,"code":"var _jsxFileName = \"/Users/ririki-nakabayashi/task-list/client/src/js/CategoryList.jsx\";\nimport React from \"react\";\nimport request from 'superagent';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst list = {\n  textDecoration: 'none',\n  borderStyle: 'none'\n};\nconst newTask = {\n  textDecoration: 'none',\n  color: '#000000',\n  borderStyle: 'none',\n  color: '#00c2ec',\n  border: '800'\n};\nexport default class CategoryList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      categorys: [],\n      nowCategory: 0\n    };\n    this.categoryDefault = this.categoryDefault.bind(this);\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\n    this.categoryChange = this.categoryChange.bind(this);\n    request.post('http://localhost:4000/categorys/category').type('form').send({\n      id: this.props.match.params.id\n    }).end((err, res) => {\n      var posts = res.body;\n      this.setState({\n        posts\n      });\n    });\n    request.get('http://localhost:4000/categorys').end((err, res) => {\n      var categorys = res.body;\n      this.setState({\n        categorys\n      });\n    });\n  }\n\n  handleDelete(event) {\n    request.post('http://localhost:4000/delete').type('form').send({\n      id: event.target.value\n    }).end(() => {\n      window.location.reload();\n    });\n  }\n\n  categoryDefault(event) {\n    request.get('http://localhost:4000/posts').end((err, res) => {\n      var posts = res.body;\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  categoryChange(event) {\n    request.post('http://localhost:4000/posts/category').type('form').send({\n      category: event.target.value\n    }).end((err, res) => {\n      var posts = res.body;\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  handleChangeStatus(event) {\n    var result = event.target.value.split('_');\n    var status = result[0];\n    var id = result[1];\n    var changeStatus = 0;\n\n    if (status == 0) {\n      changeStatus = 1;\n    } else if (status == 1) {\n      changeStatus = 0;\n    }\n\n    request.post('http://localhost:4000/update/status').type('form').send({\n      status: changeStatus,\n      id: id\n    }).end((err, res) => {\n      window.location.reload();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"category-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      style: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"active-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"\\u5168\\u30AB\\u30C6\\u30B4\\u30EA\\u3092\\u8868\\u793A\")), this.state.categorys.map(category => React.createElement(Link, {\n      to: '/list/category/' + category.id,\n      style: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, category.title))), React.createElement(Link, {\n      to: \"/category\",\n      style: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"+ EDIT CATEGORY\")))), React.createElement(\"div\", {\n      class: \"tasklist-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"task-wrapper new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"task-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/create\",\n      style: newTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"+ NEW TASK\"))), this.state.posts.map(post => React.createElement(\"li\", {\n      key: post.id,\n      class: \"task-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, post.status === 0 && React.createElement(\"div\", {\n      class: \"task-content yet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, post.title), React.createElement(\"p\", {\n      class: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, post.content), React.createElement(\"p\", {\n      class: \"limit_date yet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"limit : \", post.limit_date)), post.status === 1 && React.createElement(\"div\", {\n      class: \"task-content done\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, post.title), React.createElement(\"p\", {\n      class: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, post.content), React.createElement(\"p\", {\n      class: \"limit_date done\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"limit : \", post.limit_date)), React.createElement(\"div\", {\n      class: \"task-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/edit/' + post.id,\n      style: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"EDIT\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"button\",\n      type: \"submit\",\n      value: post.status + '_' + post.id,\n      onClick: this.handleChangeStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"STATUS\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"button\",\n      type: \"submit\",\n      value: post.id,\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"DELETE\")))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ririki-nakabayashi/task-list/client/src/js/CategoryList.jsx"],"names":["React","request","BrowserRouter","Router","Route","Link","list","textDecoration","borderStyle","newTask","color","border","CategoryList","Component","constructor","props","state","posts","categorys","nowCategory","categoryDefault","bind","handleChangeStatus","categoryChange","post","type","send","id","match","params","end","err","res","body","setState","get","handleDelete","event","target","value","window","location","reload","category","result","split","status","changeStatus","render","map","title","content","limit_date"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport request from 'superagent';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst list = {\n    textDecoration: 'none',\n    borderStyle: 'none'\n};\n\nconst newTask = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none',\n    color:'#00c2ec',\n    border:'800'\n};\n\nexport default class CategoryList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        posts: [],\n        categorys: [],\n        nowCategory: 0\n    };\n\n    this.categoryDefault = this.categoryDefault.bind(this);\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\n    this.categoryChange = this.categoryChange.bind(this);\n\n    request\n      .post('http://localhost:4000/categorys/category')\n      .type('form')\n      .send({\n        id: this.props.match.params.id\n      })\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({ posts });\n      });\n\n    request\n        .get('http://localhost:4000/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n\n  }\n\n  handleDelete(event) {\n    request\n      .post('http://localhost:4000/delete')\n      .type('form')\n      .send({\n        id: event.target.value\n      })\n      .end(() => {\n        window.location.reload();\n      });\n  }\n\n  categoryDefault(event){\n    request\n      .get('http://localhost:4000/posts')\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  categoryChange(event){\n    request\n      .post('http://localhost:4000/posts/category')\n      .type('form')\n      .send({\n        category: event.target.value\n      })\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  handleChangeStatus(event){\n    var result = event.target.value.split('_');\n    var status = result[0];\n    var id = result[1];\n    var changeStatus = 0;\n    if (status == 0) {\n        changeStatus = 1;\n    } else if (status == 1) {\n        changeStatus = 0;\n    }\n    request\n      .post('http://localhost:4000/update/status')\n      .type('form')\n      .send({\n        status: changeStatus,\n        id: id\n      })\n      .end((err, res) => {\n        window.location.reload();\n      });\n  }\n\n  render() {\n    return (\n        <div>\n            <div class=\"category-wrapper\">\n                <ul>\n                    <Link to=\"/\" style={list}>\n                        <li class=\"active-category\">\n                            全カテゴリを表示\n                            {/* <button type=\"submit\" onClick={this.categoryDefault}>全てのタスクを表示する</button> */}\n                        </li>\n                    </Link>\n                    {this.state.categorys.map(category => (\n                        <Link to={'/list/category/' + category.id} style={list}>\n                            <li>\n                                {category.title}\n                                {/* <button type=\"submit\" value={category.id} onClick={this.categoryChange}>{category.title}</button> */}\n                            </li>\n                        </Link>\n                    ))}\n                    <Link to=\"/category\" style={list}>\n                        <li>\n                            + EDIT CATEGORY\n                        </li>\n                    </Link>\n                </ul>\n            </div>\n            <div class=\"tasklist-wrapper\">\n                <ul>\n                    <li class=\"task-wrapper new\">\n                        <div class=\"task-content\">\n                            <Link to=\"/create\" style={newTask}>+ NEW TASK</Link>\n                        </div>\n                    </li>\n                    {this.state.posts.map(post => (\n                        <li　key={post.id} class=\"task-wrapper\">\n                        { post.status === 0 && \n                            <div class=\"task-content yet\">\n                                <h3>{post.title}</h3>\n                                <p class=\"content\">{post.content}</p>\n                                <p class=\"limit_date yet\">limit : {post.limit_date}</p>\n                            </div> }\n                        { post.status === 1 && \n                            <div class=\"task-content done\">\n                                <h3>{post.title}</h3>\n                                <p class=\"content\">{post.content}</p>\n                                <p class=\"limit_date done\">limit : {post.limit_date}</p>\n                            </div> }\n                            <div class=\"task-buttons\">\n                                <ul>\n                                    <li>\n                                    <Link to={'/edit/' + post.id} style={list}><button class=\"button\">EDIT</button></Link>\n                                    </li>\n                                    <li>\n                                        <button class=\"button\" type=\"submit\" value={post.status + '_' + post.id} onClick={this.handleChangeStatus}>STATUS</button>\n                                    </li>\n                                    <li>\n                                        <button class=\"button\" type=\"submit\" value={post.id} onClick={this.handleDelete}>DELETE</button>\n                                    </li>\n                                </ul>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}