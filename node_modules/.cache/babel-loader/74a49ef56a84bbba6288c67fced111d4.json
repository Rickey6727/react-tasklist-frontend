{"ast":null,"code":"var _jsxFileName = \"/Users/ririki/task-list/client/src/js/Create.jsx\";\nimport React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst list = {\n  textDecoration: 'none',\n  color: '#000000',\n  borderStyle: 'none'\n};\nexport default class Create extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      content: '',\n      category: 0,\n      limit: new Date(),\n      categorys: []\n    };\n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.taskCategoryChange = this.taskCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    request.get('http://localhost:4000/categorys').end((err, res) => {\n      var categorys = res.body;\n      this.setState({\n        categorys\n      });\n    });\n  }\n\n  taskTitleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  taskContentChange(event) {\n    this.setState({\n      content: event.target.value\n    });\n  }\n\n  taskCategoryChange(event) {\n    this.setState({\n      category: event\n    });\n  }\n\n  taskLimitChange(date) {\n    this.setState({\n      limit: date\n    });\n  }\n\n  handleSubmit() {\n    var date = this.state.limit;\n    var y = date.getFullYear();\n    var m = (\"00\" + (date.getMonth() + 1)).slice(-2);\n    var d = (\"00\" + date.getDate()).slice(-2);\n    var limitDate = y + \"-\" + m + \"-\" + d;\n    request.post('http://localhost:4000/insert').type('form').send({\n      type: this.props.status,\n      title: this.state.title,\n      content: this.state.content,\n      category: this.state.category,\n      limit: limitDate\n    }).end(() => {\n      alert(\"タスクを追加しました\");\n      window.location.reload();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"task-creator-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      style: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"back-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u304F\\u304F\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"CREATE TASK\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"TaskTitle:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.taskTitleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"TaskDesc:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      value: this.state.content,\n      onChange: this.taskContentChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"TaskCategory:\", React.createElement(\"select\", {\n      value: this.state.category,\n      onChange: e => this.setState({\n        category: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u6307\\u5B9A\\u306A\\u3057\"), this.state.categorys.map(category => React.createElement(\"option\", {\n      value: category.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, category.title)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"LimitDate:\", React.createElement(DatePicker, {\n      selected: this.state.limit,\n      onChange: this.taskLimitChange,\n      dateFormat: \"yyyy-MM-dd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u8FFD\\u52A0\\uFF01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n    document.getElementById('calendar-button');\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/ririki/task-list/client/src/js/Create.jsx"],"names":["React","request","DatePicker","BrowserRouter","Router","Route","Link","list","textDecoration","color","borderStyle","Create","Component","constructor","props","state","title","content","category","limit","Date","categorys","taskTitleChange","bind","taskContentChange","taskLimitChange","taskCategoryChange","handleSubmit","get","end","err","res","body","setState","event","target","value","date","y","getFullYear","m","getMonth","slice","d","getDate","limitDate","post","type","send","status","alert","window","location","reload","render","e","map","id","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst list = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none'\n};\n\nexport default class Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      content: '',\n      category: 0,\n      limit: new Date(),\n      categorys: []\n    };\n\n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.taskCategoryChange = this.taskCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    request\n        .get('http://localhost:4000/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n  }\n\n  taskTitleChange(event) {\n    this.setState({title: event.target.value});\n  }\n\n  taskContentChange(event) {\n    this.setState({content: event.target.value});\n  }\n\n  taskCategoryChange(event) {\n    this.setState({category: event});\n  }\n\n  taskLimitChange(date) {\n    this.setState({limit: date});\n  }\n\n  handleSubmit() {\n    var date = this.state.limit\n    var y = date.getFullYear();\n    var m = (\"00\" + (date.getMonth()+1)).slice(-2);\n    var d = (\"00\" + date.getDate()).slice(-2);\n    var limitDate = y + \"-\" + m + \"-\" + d;\n    request\n      .post('http://localhost:4000/insert')\n      .type('form')\n      .send({\n        type: this.props.status,\n        title: this.state.title,\n        content: this.state.content,\n        category: this.state.category,\n        limit: limitDate\n      })\n      .end(() => {\n        alert(\"タスクを追加しました\");\n        window.location.reload();\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"task-creator-wrapper\">\n        <Link to=\"/\" style={list}>\n            <div class=\"back-area\">\n            くく\n            </div>\n        </Link>\n        <h1>CREATE TASK</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            TaskTitle:\n            <input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.taskTitleChange} />\n          </label>\n          <label>\n            TaskDesc:\n            <input type=\"text\" id=\"content\" name=\"content\" value={this.state.content} onChange={this.taskContentChange} />\n          </label>\n          <label>\n            TaskCategory:\n            <select\n            value={this.state.category}\n            onChange={ e => this.setState({category: e.target.value}) }>\n              <option value=\"0\">指定なし</option>\n              {this.state.categorys.map(category => (\n                  <option value={category.id}>{category.title}</option>\n              ))}\n            </select>\n          </label>\n          <label>\n            LimitDate:\n            <DatePicker\n              selected={this.state.limit}\n              onChange={this.taskLimitChange}\n              dateFormat=\"yyyy-MM-dd\"\n            />\n          </label>\n          <input type=\"submit\" value=\"追加！\" />\n        </form>\n      </div>\n    );\n    document.getElementById('calendar-button')\n  }\n};\n"]},"metadata":{},"sourceType":"module"}