{"ast":null,"code":"var _jsxFileName = \"/Users/ririki-nakabayashi/task-list/client/src/js/List.jsx\";\nimport React from \"react\";\nimport request from 'superagent';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      categorys: []\n    };\n    this.categoryDefault = this.categoryDefault.bind(this);\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\n    this.categoryChange = this.categoryChange.bind(this);\n    request.get('http://localhost:4000/posts').end((err, res) => {\n      var posts = res.body;\n      this.setState({\n        posts\n      });\n      request.get('http://localhost:4000/categorys').end((err, res) => {\n        this.setState({\n          categorys\n        });\n      });\n    });\n  }\n\n  handleDelete(event) {\n    request.post('http://localhost:4000/delete').type('form').send({\n      id: event.target.value\n    }).end(() => {\n      alert(\"タスクを完了しました\");\n      window.location.reload();\n    });\n  }\n\n  categoryDefault(event) {\n    request.get('http://localhost:4000/posts').end((err, res) => {\n      var posts = res.body;\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  categoryChange(event) {\n    request.post('http://localhost:4000/posts/category').type('form').send({\n      category: event.target.value\n    }).end((err, res) => {\n      var posts = res.body;\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  handleChangeStatus(event) {\n    console.log(event.target.value);\n    var result = event.target.value.split('_');\n    console.log(result[0]);\n    console.log(result[1]);\n    var status = result[0];\n    var id = result[1];\n    var changeStatus = 0;\n\n    if (status == 0) {\n      changeStatus = 1;\n    } else if (status == 1) {\n      changeStatus = 0;\n    }\n\n    request.post('http://localhost:4000/update/status').type('form').send({\n      status: changeStatus,\n      id: id\n    }).end((err, res) => {\n      window.location.reload();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"MY TASKs\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.categoryDefault,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\u5168\\u3066\\u306E\\u30BF\\u30B9\\u30AF\\u3092\\u8868\\u793A\\u3059\\u308B\"), this.state.categorys.map(category => React.createElement(\"button\", {\n      type: \"submit\",\n      value: category.id,\n      onClick: this.categoryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, category.title)), React.createElement(Link, {\n      to: \"/category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"+ NEW CATEGORY\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"+ NEW TASK\"), this.state.posts.map(post => React.createElement(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, post.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, post.content), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, post.limit_date), post.status === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"YET\"), post.status === 1 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"DONE\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/edit/' + post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"EDIT\")), React.createElement(\"button\", {\n      type: \"submit\",\n      value: post.status + '_' + post.id,\n      onClick: this.handleChangeStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"DONE\"), React.createElement(\"button\", {\n      type: \"submit\",\n      value: post.id,\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"STASH\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ririki-nakabayashi/task-list/client/src/js/List.jsx"],"names":["React","request","BrowserRouter","Router","Route","Link","App","Component","constructor","props","state","posts","categorys","categoryDefault","bind","handleChangeStatus","categoryChange","get","end","err","res","body","setState","handleDelete","event","post","type","send","id","target","value","alert","window","location","reload","category","console","log","result","split","status","changeStatus","render","map","title","content","limit_date"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport request from 'superagent';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        posts: [],\n        categorys: []\n    };\n\n    this.categoryDefault = this.categoryDefault.bind(this);\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\n    this.categoryChange = this.categoryChange.bind(this);\n\n    request\n      .get('http://localhost:4000/posts')\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({ posts });\n        request\n            .get('http://localhost:4000/categorys')\n            .end((err, res) => {\n                this.setState({ categorys });\n            });\n      });\n\n  }\n\n  handleDelete(event) {\n    request\n      .post('http://localhost:4000/delete')\n      .type('form')\n      .send({\n        id: event.target.value\n      })\n      .end(() => {\n        alert(\"タスクを完了しました\");\n        window.location.reload();\n      });\n  }\n\n  categoryDefault(event){\n    request\n      .get('http://localhost:4000/posts')\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  categoryChange(event){\n    request\n      .post('http://localhost:4000/posts/category')\n      .type('form')\n      .send({\n        category: event.target.value\n      })\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  handleChangeStatus(event){\n      console.log(event.target.value);\n      var result = event.target.value.split('_')\n      console.log(result[0]);\n      console.log(result[1]);\n      var status = result[0];\n      var id = result[1];\n    var changeStatus = 0;\n    if (status == 0) {\n        changeStatus = 1;\n    } else if (status == 1) {\n        changeStatus = 0;\n    }\n    request\n      .post('http://localhost:4000/update/status')\n      .type('form')\n      .send({\n        status: changeStatus,\n        id: id\n      })\n      .end((err, res) => {\n          window.location.reload();\n      });\n  }\n\n  render() {\n    return (\n        <div>\n            <h1>MY TASKs</h1>\n            <button type=\"submit\" onClick={this.categoryDefault}>全てのタスクを表示する</button>\n            {this.state.categorys.map(category => (\n                <button type=\"submit\" value={category.id} onClick={this.categoryChange}>{category.title}</button>\n            ))}\n            <Link to=\"/category\">+ NEW CATEGORY</Link>\n            <ul>\n            <Link to=\"/create\">+ NEW TASK</Link>\n            {this.state.posts.map(post => (\n                <li　key={post.id}>\n                <h3>{post.title}</h3>\n                <p>{post.content}</p>\n                <p>{post.limit_date}</p>\n                { post.status === 0 && <p>YET</p> }\n                { post.status === 1 && <p>DONE</p> }\n                <button><Link to={'/edit/' + post.id}>EDIT</Link></button>\n                <button type=\"submit\" value={post.status + '_' + post.id} onClick={this.handleChangeStatus}>DONE</button>\n                <button type=\"submit\" value={post.id} onClick={this.handleDelete}>STASH</button>\n                </li>\n            ))}\n            </ul>\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}