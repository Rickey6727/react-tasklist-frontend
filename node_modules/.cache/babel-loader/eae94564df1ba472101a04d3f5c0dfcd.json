{"ast":null,"code":"var _jsxFileName = \"/Users/ririki-nakabayashi/task-list/client/src/js/Form.jsx\";\nimport React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'やること',\n      content: 'やること詳細',\n      limit: new Date()\n    };\n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.editData) {\n      this.setState({\n        title: nextProps.editData.title,\n        content: nextProps.editData.content,\n        limit: nextProps.editData.limit\n      });\n    }\n  }\n\n  taskTitleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  taskContentChange(event) {\n    this.setState({\n      content: event.target.value\n    });\n  }\n\n  taskLimitChange(date) {\n    this.setState({\n      limit: date\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.title);\n    console.log(this.state.limit); // request\n    //   .post('http://localhost:4000/insert')\n    //   .type('form')\n    //   .send({\n    //     type: this.props.status,\n    //     title: this.state.title,\n    //     content: this.state.content,\n    //     limit: this.state.limit\n    //   })\n    //   .end((err, res) => {\n    //   });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"TaskTitle:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.taskTitleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"TaskDesc:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      value: this.state.content,\n      onChange: this.taskContentChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"LimitDate:\", React.createElement(DatePicker, {\n      selected: this.state.limit,\n      onChange: this.taskLimitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u8FFD\\u52A0\\uFF01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n    document.getElementById('calendar-button');\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/ririki-nakabayashi/task-list/client/src/js/Form.jsx"],"names":["React","request","DatePicker","moment","Form","Component","constructor","props","state","title","content","limit","Date","taskTitleChange","bind","taskContentChange","taskLimitChange","handleSubmit","componentWillReceiveProps","nextProps","editData","setState","event","target","value","date","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment'\n\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: 'やること',\n      content: 'やること詳細',\n      limit: new Date()\n    };\n\n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.editData){\n       this.setState({\n        title: nextProps.editData.title,\n        content: nextProps.editData.content,\n        limit: nextProps.editData.limit,\n       });\n    }\n }\n\n  taskTitleChange(event) {\n    this.setState({title: event.target.value});\n  }\n\n  taskContentChange(event) {\n    this.setState({content: event.target.value});\n  }\n\n  taskLimitChange(date) {\n    this.setState({limit: date});\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.title);\n    console.log(this.state.limit);\n    // request\n    //   .post('http://localhost:4000/insert')\n    //   .type('form')\n    //   .send({\n    //     type: this.props.status,\n    //     title: this.state.title,\n    //     content: this.state.content,\n    //     limit: this.state.limit\n    //   })\n    //   .end((err, res) => {\n    //   });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          TaskTitle:\n          <input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.taskTitleChange} />\n        </label>\n        <label>\n          TaskDesc:\n          <input type=\"text\" id=\"content\" name=\"content\" value={this.state.content} onChange={this.taskContentChange} />\n        </label>\n        <label>\n          LimitDate:\n          <DatePicker\n            selected={this.state.limit}\n            onChange={this.taskLimitChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"追加！\" />\n      </form>\n    );\n    document.getElementById('calendar-button')\n  }\n};\n"]},"metadata":{},"sourceType":"module"}