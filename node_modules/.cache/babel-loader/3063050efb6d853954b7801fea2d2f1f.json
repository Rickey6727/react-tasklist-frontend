{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CLASS_PREFIX = undefined;\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _immutabilityHelper = require('immutability-helper');\n\nvar _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);\n\nvar _calc = require('./calc');\n\nvar _style = require('./style');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * internal classname prefix\n * @type {string}\n */\n\n\nvar CLASS_PREFIX = exports.CLASS_PREFIX = 'react-ja-date-picker__';\n/**\n * Define Calender Picker Component\n * @return {ReactComponent} React Component\n */\n\nvar DatePicker = function (_Component) {\n  _inherits(DatePicker, _Component);\n  /**\n   * initializ state\n   * @public\n   * @param  {Props} props given props\n   * @return {void}\n   */\n\n  /**\n   * props type check\n   * @type {Object}\n   */\n\n\n  function DatePicker(props) {\n    _classCallCheck(this, DatePicker);\n\n    var _this = _possibleConstructorReturn(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call(this, props));\n\n    var tmp = (0, _moment2.default)(_this.props.date);\n    var date = tmp.isValid() ? tmp : (0, _moment2.default)();\n    _this.state = {\n      year: date.year(),\n      month: date.month() + 1,\n      styles: (0, _calc.normalizeStyle)(_style2.default),\n      hovering: false,\n      focusing: false\n    };\n    return _this;\n  }\n  /**\n   * generate static className and style objects\n   * @param  {array<string>|string} slug your slug in snake-case\n   * @return {{className:string,style:cssInJs}} generated object\n   */\n\n  /**\n   * default values of props\n   * @type {Object}\n   */\n\n\n  _createClass(DatePicker, [{\n    key: 'classStyle',\n    value: function classStyle(slug) {\n      var result = {\n        className: CLASS_PREFIX + slug,\n        style: this.state.styles[(0, _calc.snake2camel)(slug)]\n      };\n      return result;\n    }\n    /**\n     * manage hover status\n     * @param  {string} id id\n     * @return {{onMouseEnter:function,onMouseLeave:function}}  eventHandlers\n     */\n\n  }, {\n    key: 'enableHover',\n    value: function enableHover(id) {\n      var _this2 = this;\n\n      return {\n        onMouseEnter: function onMouseEnter() {\n          return _this2.hoverOn(id);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.hoverOn(false);\n        }\n      };\n    }\n    /**\n     * manage focus status\n     * @param  {string} id id\n     * @return {{onBlur:function,onFocus:function}}  eventHandlers\n     */\n\n  }, {\n    key: 'enableFocus',\n    value: function enableFocus(id) {\n      var _this3 = this;\n\n      return {\n        onBlur: function onBlur() {\n          return _this3.focusOn(false);\n        },\n        onFocus: function onFocus() {\n          return _this3.focusOn(id);\n        }\n      };\n    }\n    /**\n     * format prop overload with {string} or {function}\n     * @param  {number} year  year\n     * @param  {number} month month\n     * @param  {number} day day\n     * @return {string} the aimed URL string\n     */\n\n  }, {\n    key: 'getURL',\n    value: function getURL(year, month, day) {\n      var result = typeof this.props.format === 'function' ? format(year, month, day) : // use it as it is\n      (0, _calc.strFormat)(this.props.format, {\n        year: year,\n        month: month,\n        day: day\n      }); // use embedded\n\n      return result;\n    }\n    /**\n     * check if a element with certain id is being hovered\n     * @param  {string}  id  given id\n     * @return {boolean}     whether hoverring\n     */\n\n  }, {\n    key: 'isHovering',\n    value: function isHovering(id) {\n      return this.state ? this.state.hovering === id : false;\n    }\n    /**\n     * check if a elelment with certain id is being focused\n     * @param  {string}  id given id\n     * @return {boolean}    whether focusing\n     */\n\n  }, {\n    key: 'isFocusing',\n    value: function isFocusing(id) {\n      return this.state ? this.state.focusing === id : false;\n    }\n    /**\n     * create callback to set hoverirng state\n     * @param  {string|boolean} id giving id, or false to cancel it\n     * @return {void}\n     */\n\n  }, {\n    key: 'hoverOn',\n    value: function hoverOn(id) {\n      this.setState((0, _immutabilityHelper2.default)(this.state, {\n        hovering: {\n          $set: id\n        }\n      }));\n    }\n    /**\n     * create callback to set focusing state\n     * @param  {string|boolean} id giving id, or false to cancel it\n     * @return {void}\n     */\n\n  }, {\n    key: 'focusOn',\n    value: function focusOn(id) {\n      this.setState((0, _immutabilityHelper2.default)(this.state, {\n        focusing: {\n          $set: id\n        }\n      }));\n    }\n    /**\n     * change next month\n     * @return {void}\n     */\n\n  }, {\n    key: 'moveMonthFoward',\n    value: function moveMonthFoward() {\n      var nYear = this.state.month + 1 > 12 ? this.state.year + 1 : this.state.year;\n      var nMonth = this.state.month == 12 ? 1 : this.state.month + 1;\n      this.setState((0, _immutabilityHelper2.default)(this.state, {\n        year: {\n          $set: nYear\n        },\n        month: {\n          $set: nMonth\n        }\n      }));\n    }\n    /**\n     * change prev month\n     * @return {void}\n     */\n\n  }, {\n    key: 'moveMonthBackward',\n    value: function moveMonthBackward() {\n      var nYear = this.state.month - 1 == 0 ? this.state.year - 1 : this.state.year;\n      var nMonth = this.state.month - 1 == 0 ? 12 : this.state.month - 1;\n      this.setState((0, _immutabilityHelper2.default)(this.state, {\n        year: {\n          $set: nYear\n        },\n        month: {\n          $set: nMonth\n        }\n      }));\n    }\n    /**\n     * render\n     * @return {ReactComponent} render a calender picker\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this; // parse props\n\n\n      var type = this.props.type;\n      var onSelect = this.props.onSelect; // parse style object\n\n      var STYLE = (0, _calc.normalizeStyle)(_style2.default); // parse state\n\n      var _state = this.state,\n          year = _state.year,\n          month = _state.month;\n      /**\n       * render week labels as date picker table head component\n       * @type {array<ReactComponent>}\n       */\n\n      var headRow = _react2.default.createElement('tr', null, _react2.default.createElement('th', _extends({\n        scope: 'row'\n      }, this.classStyle('sr-only')), '週'), _config2.default.weekLabels.ja.map(function (label) {\n        return _react2.default.createElement('th', _extends({\n          key: 'weeklabel-' + label,\n          scope: 'col'\n        }, _this4.classStyle('week-label')), label);\n      }));\n      /**\n       * 当月の日の情報をまとめたオブジェクトを出力する\n       * @type {array<array<{day:number,month:number,active:boolean,weekday:string,isHoliday:boolean}>>}\n       */\n\n\n      var thisMonth = (0, _calc.getMonthCalendar)(year, month);\n      var todayUnixSec = (0, _moment2.default)().startOf('day').unix();\n      var selectedDayUnixSec = (0, _moment2.default)(this.props.date).startOf('day').unix();\n      /**\n       * render date picker table body component\n       * @type {array<ReactComponent>}\n       */\n\n      var bodyRows = thisMonth.map(function (week, i) {\n        return _react2.default.createElement('tr', {\n          key: month + '-' + (i + 1)\n        }, _react2.default.createElement('th', _extends({\n          scope: 'row'\n        }, _this4.classStyle('sr-only')), '\\u7B2C' + (i + 1) + '\\u9031'), week.map(function (_ref) {\n          var day = _ref.day,\n              month = _ref.month,\n              year = _ref.year,\n              active = _ref.active,\n              weekday = _ref.weekday,\n              isHoliday = _ref.isHoliday;\n          var key = 'month-day-' + year + '-' + month + '-' + day;\n\n          var _props$highlighted$sp = _this4.props.highlighted.split('-').map(function (x) {\n            return parseInt(x);\n          }),\n              _props$highlighted$sp2 = _slicedToArray(_props$highlighted$sp, 3),\n              highlightedYear = _props$highlighted$sp2[0],\n              highlightedMonth = _props$highlighted$sp2[1],\n              highlightedDay = _props$highlighted$sp2[2];\n\n          var isHighlighted = year === highlightedYear && month === highlightedMonth && day === highlightedDay;\n          /**\n           * deprecated\n           * NOTE: これは、CSS-in-JSのようなものを試そうとした名残\n           * v2.0.0では廃止して外部のライブラリ導入を目指す\n           * @type {Object}\n           */\n\n          var style = _extends({}, STYLE.day, active ? STYLE.active : STYLE.notActive, STYLE[weekday], isHoliday ? STYLE.holiday : {}, _this4.isHovering(key) ? STYLE['day:hover'] : {});\n\n          var theDayUnixSec = (0, _moment2.default)([year, month - 1, day]).unix();\n          var tens = todayUnixSec < theDayUnixSec ? 'future' : todayUnixSec === theDayUnixSec ? 'today' : todayUnixSec > theDayUnixSec ? 'past' : 'tens-error';\n          var relativeTens = selectedDayUnixSec < theDayUnixSec ? 'relative-future' : selectedDayUnixSec === theDayUnixSec ? 'relative-today' : selectedDayUnixSec > theDayUnixSec ? 'relative-past' : 'relative-tens-error';\n          return _react2.default.createElement('td', _extends({\n            className: ['day', active ? 'active' : 'not-active', isHighlighted ? 'highlighted' : 'not-highlighted', isHoliday ? 'holiday' : 'weekday', tens, relativeTens].map(function (slug) {\n              return CLASS_PREFIX + slug;\n            }).join(' '),\n            key: key,\n            style: style\n          }, _this4.enableHover(key)), type === 'link' ? // exports <a> or <button>\n          _react2.default.createElement('a', _extends({\n            className: CLASS_PREFIX + 'day_' + type,\n            href: _this4.getURL(year, month, day),\n            style: _this4.isFocusing(key) ? STYLE['link:focus'] : STYLE.link\n          }, _this4.enableFocus(key), {\n            onClick: function onClick() {\n              return onSelect(year, month, day);\n            }\n          }), day) : _react2.default.createElement('button', _extends({\n            className: CLASS_PREFIX + 'day_' + type,\n            style: _this4.isFocusing(key) ? STYLE['button:focus'] : STYLE.button\n          }, _this4.enableFocus(key), {\n            onClick: function onClick() {\n              return onSelect(year, month, day);\n            }\n          }), day));\n        }));\n      }); // generate each style for buttons\n\n      /**\n       * ホバーしているかどうかに基づいて、先月に移動するボタンのクラスをオブジェクトの形式で生成する\n       * @type {object}\n       */\n\n      var stylePrev = this.isHovering('button-prev') ? _extends({}, STYLE['navButton:hover'], STYLE.navPrev) : _extends({}, STYLE.navButton, STYLE.navPrev);\n      /**\n       * ホバーしているかどうかに基づいて、来月に移動するボタンのクラスをオブジェクトの形式で生成する\n       * @type {object}\n       */\n\n      var styleNext = this.isHovering('button-next') ? _extends({}, STYLE['navButton:hover'], STYLE.navNext) : _extends({}, STYLE.navButton, STYLE.navNext);\n      return _react2.default.createElement('div', this.classStyle('container'), _react2.default.createElement('nav', this.classStyle('navigation'), _react2.default.createElement('button', _extends({\n        className: CLASS_PREFIX + 'nav-button ' + CLASS_PREFIX + 'nav-prev',\n        onClick: function onClick() {\n          return _this4.moveMonthBackward();\n        },\n        style: stylePrev\n      }, this.enableHover('button-prev')), '←'), _react2.default.createElement('button', _extends({\n        className: CLASS_PREFIX + 'nav-button ' + CLASS_PREFIX + 'nav-next',\n        onClick: function onClick() {\n          return _this4.moveMonthFoward();\n        },\n        style: styleNext\n      }, this.enableHover('button-next')), '→')), _react2.default.createElement('div', this.classStyle('calender'), _react2.default.createElement('table', null, _react2.default.createElement('caption', this.classStyle('caption'), year + '\\u5E74' + month + '\\u6708'), _react2.default.createElement('thead', this.classStyle('week-labels'), headRow), _react2.default.createElement('tbody', this.classStyle('calender-grid'), bodyRows))));\n    }\n  }]);\n\n  return DatePicker;\n}(_react.Component);\n\nDatePicker.defaultProps = {\n  date: '',\n  format: '#',\n  highlighted: '',\n  type: 'link',\n  onSelect: function onSelect(x) {\n    return x;\n  }\n};\nexports.default = DatePicker;","map":null,"metadata":{},"sourceType":"script"}