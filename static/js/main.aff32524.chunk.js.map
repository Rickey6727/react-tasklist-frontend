{"version":3,"sources":["js/List.jsx","js/Header.jsx","js/Edit.jsx","js/Create.jsx","js/Category.jsx","js/CategoryEdit.jsx","js/CategoryCreate.jsx","js/CategoryList.jsx","js/App.jsx","index.js"],"names":["list","textDecoration","borderStyle","newTask","_newTask","color","Object","defineProperty","List","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","posts","categorys","categoryDefault","bind","assertThisInitialized","handleChangeStatus","categoryChange","request","get","end","err","res","body","setState","event","post","type","send","id","target","value","window","location","reload","_this2","_this3","category","result","split","status","changeStatus","_this4","react_default","a","createElement","class","onClick","map","title","react_router_dom","to","style","key","content","limit_date","handleDelete","React","Component","Header","Edit","limit","Date","taskTitleChange","taskContentChange","taskLimitChange","taskCategoryChange","handleSubmit","match","params","limitDate","date","console","log","getFullYear","getMonth","slice","getDate","alert","onSubmit","name","onChange","e","es","selected","dateFormat","Create","Category","CategoryEdit","categoryTitleChange","CategoryCreate","href","placeholder","CategoryList_newTask","CategoryList","nowCategory","App","Header_Header","react_router","path","exact","component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.aff32524.chunk.js","sourcesContent":["import React from \"react\";\nimport request from 'superagent';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst list = {\n    textDecoration: 'none',\n    borderStyle: 'none'\n};\n\nconst newTask = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none',\n    color:'#00c2ec',\n    border:'800'\n};\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        posts: [],\n        categorys: []\n    };\n\n    this.categoryDefault = this.categoryDefault.bind(this);\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\n    this.categoryChange = this.categoryChange.bind(this);\n\n    request\n      .get('https://react-tasklist-backend.herokuapp.com/posts')\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({ posts });\n      });\n\n    request\n        .get('https://react-tasklist-backend.herokuapp.com/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n\n  }\n\n  handleDelete(event) {\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/delete')\n      .type('form')\n      .send({\n        id: event.target.value\n      })\n      .end(() => {\n        window.location.reload();\n      });\n  }\n\n  categoryDefault(event){\n    request\n      .get('https://react-tasklist-backend.herokuapp.com/posts')\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  categoryChange(event){\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/posts/category')\n      .type('form')\n      .send({\n        category: event.target.value\n      })\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  handleChangeStatus(event){\n    var result = event.target.value.split('_');\n    var status = result[0];\n    var id = result[1];\n    var changeStatus = 0;\n    if (status == 0) {\n        changeStatus = 1;\n    } else if (status == 1) {\n        changeStatus = 0;\n    }\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/update/status')\n      .type('form')\n      .send({\n        status: changeStatus,\n        id: id\n      })\n      .end((err, res) => {\n        window.location.reload();\n      });\n  }\n\n  render() {\n    return (\n        <div>\n            <div class=\"category-wrapper\">\n                <ul>\n                    <li class=\"active-category\">\n                        <button type=\"submit\" onClick={this.categoryDefault}>全カテゴリを表示</button>\n                    </li>\n                    {this.state.categorys.map(category => (\n                        <li class=\"non-active-category\">\n                            <button type=\"submit\" value={category.id} onClick={this.categoryChange}>{category.title}</button>\n                        </li>\n                        // <Link to={'/list/category/' + category.id} style={list}>\n                        //     <li>\n                        //         {category.title}\n                        //         {/* <button type=\"submit\" value={category.id} onClick={this.categoryChange}>{category.title}</button> */}\n                        //     </li>\n                        // </Link>\n                    ))}\n                    <Link to=\"/category\" style={list}>\n                        <li class=\"edit\">\n                            EDIT\n                        </li>\n                    </Link>\n                </ul>\n            </div>\n            <div class=\"tasklist-wrapper\">\n                <ul>\n                    <Link to=\"/create\" style={newTask}>\n                        <li class=\"task-wrapper new\">\n                            <div class=\"task-content new\">\n                                + NEW TASK\n                            </div>\n                        </li>\n                    </Link>\n                    {this.state.posts.map(post => (\n                        <li　key={post.id} class=\"task-wrapper\">\n                        { post.status === 0 && \n                            <div class=\"task-content yet\">\n                                <h3>{post.title}</h3>\n                                <p class=\"content\">{post.content}</p>\n                                <p class=\"limit_date yet\">limit : {post.limit_date}</p>\n                            </div> }\n                        { post.status === 1 && \n                            <div class=\"task-content done\">\n                                <h3>{post.title}</h3>\n                                <p class=\"content\">{post.content}</p>\n                                <p class=\"limit_date done\">limit : {post.limit_date}</p>\n                            </div> }\n                            <div class=\"task-buttons\">\n                                <ul>\n                                    <li>\n                                    <Link to={'/edit/' + post.id} style={list}><button class=\"button\">EDIT</button></Link>\n                                    </li>\n                                    <li>\n                                        <button class=\"button\" type=\"submit\" value={post.status + '_' + post.id} onClick={this.handleChangeStatus}>STATUS</button>\n                                    </li>\n                                    <li>\n                                        <button class=\"button\" type=\"submit\" value={post.id} onClick={this.handleDelete}>DELETE</button>\n                                    </li>\n                                </ul>\n                            </div>\n                        </li>\n                    ))}\n                    <Link to=\"/create\" style={newTask}>\n                        <li class=\"task-wrapper new\">\n                            <div class=\"task-content new\">\n                                + NEW TASK\n                            </div>\n                        </li>\n                    </Link>\n                </ul>\n            </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst list = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none'\n};\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n\n  }\n\n  render() {\n    return (\n      <div class=\"header\">\n      <h1>tasklist</h1>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst list = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none'\n};\n\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      id: 0,\n      title: '',\n      content: '',\n      category: 0,\n      limit: new Date(),\n      categorys: []\n    };\n    \n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.taskCategoryChange = this.taskCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/posts/edit')\n      .type('form')\n      .send({\n        id: this.props.match.params.id\n      })\n      .end((err, res) => {\n        var limitDate = new Date(res.body[0].limit_date);\n        this.setState({id: res.body[0].id});\n        this.setState({title: res.body[0].title});\n        this.setState({content: res.body[0].content});\n        this.setState({category: res.body[0].category});\n        this.setState({limit: limitDate});\n      });\n\n    request\n        .get('https://react-tasklist-backend.herokuapp.com/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n\n  }\n\n  taskTitleChange(event) {\n    this.setState({title: event.target.value});\n  }\n\n  taskContentChange(event) {\n    this.setState({content: event.target.value});\n  }\n\n  taskCategoryChange(event) {\n    this.setState({category: event});\n  }\n\n  taskLimitChange(date) {\n    this.setState({limit: date});\n  }\n\n  handleSubmit(event) {\n    console.log(\"来てます\");\n    var date = this.state.limit\n    var y = date.getFullYear();\n    var m = (\"00\" + (date.getMonth()+1)).slice(-2);\n    var d = (\"00\" + date.getDate()).slice(-2);\n    var limitDate = y + \"-\" + m + \"-\" + d;\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/update')\n      .type('form')\n      .send({\n        type: this.props.status,\n        id: this.state.id,\n        title: this.state.title,\n        content: this.state.content,\n        category: this.state.category,\n        limit: limitDate\n      })\n      .end((err, res) => {\n        alert(\"タスクを変更しました\");\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"task-editer-edit\">\n        <Link to=\"/\" style={list}>\n            <div class=\"back-area\">\n            くく\n            </div>\n        </Link>\n          <h1>EDIT TASK</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            TaskTitle:\n            <input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.taskTitleChange} />\n          </label>\n          <label>\n            TaskDesc:\n            <input type=\"text\" id=\"content\" name=\"content\" value={this.state.content} onChange={this.taskContentChange} />\n          </label>\n          <label>\n            TaskCategory:\n            <select\n            value={this.state.category}\n            onChange={ e => this.setState({category: e.target.value}) }>\n              <option value=\"0\">指定なし</option>\n              {this.state.categorys.map(category => (\n                  <option value={category.id}>{category.title}</option>\n              ))}\n            </select>\n          </label>\n          <label>\n            LimitDate:\n            <DatePicker\n              selected={this.state.limit}\n              onChange={this.taskLimitChange}\n              dateFormat=\"yyyy-MM-dd\"\n            />\n          </label>\n          <input type=\"submit\" value=\"追加！\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst list = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none'\n};\n\nexport default class Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      content: '',\n      category: 0,\n      limit: new Date(),\n      categorys: []\n    };\n\n    this.taskTitleChange = this.taskTitleChange.bind(this);\n    this.taskContentChange = this.taskContentChange.bind(this);\n    this.taskLimitChange = this.taskLimitChange.bind(this);\n    this.taskCategoryChange = this.taskCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    request\n        .get('https://react-tasklist-backend.herokuapp.com/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n  }\n\n  taskTitleChange(event) {\n    this.setState({title: event.target.value});\n  }\n\n  taskContentChange(event) {\n    this.setState({content: event.target.value});\n  }\n\n  taskCategoryChange(event) {\n    this.setState({category: event});\n  }\n\n  taskLimitChange(date) {\n    this.setState({limit: date});\n  }\n\n  handleSubmit() {\n    var date = this.state.limit\n    var y = date.getFullYear();\n    var m = (\"00\" + (date.getMonth()+1)).slice(-2);\n    var d = (\"00\" + date.getDate()).slice(-2);\n    var limitDate = y + \"-\" + m + \"-\" + d;\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/insert')\n      .type('form')\n      .send({\n        type: this.props.status,\n        title: this.state.title,\n        content: this.state.content,\n        category: this.state.category,\n        limit: limitDate\n      })\n      .end(() => {\n        alert(\"タスクを追加しました\");\n        window.location.reload();\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"task-creator-wrapper\">\n        <Link to=\"/\" style={list}>\n            <div class=\"back-area\">\n            くく\n            </div>\n        </Link>\n        <h1>CREATE TASK</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            TaskTitle:\n            <input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.taskTitleChange} />\n          </label>\n          <label>\n            TaskDesc:\n            <input type=\"text\" id=\"content\" name=\"content\" value={this.state.content} onChange={this.taskContentChange} />\n          </label>\n          <label>\n            TaskCategory:\n            <select\n            value={this.state.category}\n            onChange={ e => this.setState({category: e.target.value}) }>\n              <option value=\"0\">指定なし</option>\n              {this.state.categorys.map(category => (\n                  <option value={category.id}>{category.title}</option>\n              ))}\n            </select>\n          </label>\n          <label>\n            LimitDate:\n            <DatePicker\n              selected={this.state.limit}\n              onChange={this.taskLimitChange}\n              dateFormat=\"yyyy-MM-dd\"\n            />\n          </label>\n          <input type=\"submit\" value=\"追加！\" />\n        </form>\n      </div>\n    );\n    document.getElementById('calendar-button')\n  }\n};\n","import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst list = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none'\n};\n\nexport default class Category extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categorys: []\n    };\n\n    request\n        .get('https://react-tasklist-backend.herokuapp.com/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n  }\n\n  handleDelete(event) {\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/category/delete')\n      .type('form')\n      .send({\n        id: event.target.value\n      })\n      .end(() => {\n        window.location.reload();\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"category-editer-wrapper\">\n        <Link to=\"/\" style={list}>\n            <div class=\"back-area\">\n            くく\n            </div>\n        </Link>\n        <h1>CATEGORY LIST </h1>\n        <Link to=\"/category/create\" style={list}>NEW</Link>\n        <ul>\n            {this.state.categorys.map(category => (\n                <li　key={category.id}>\n                    <h3 class=\"category-title\">{category.title}</h3>\n                    <button><Link to={'category/edit/' + category.id} style={list}>EDIT</Link></button>\n                    <button type=\"submit\" value={category.id} onClick={this.handleDelete}>STASH</button>\n                </li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n};\n","import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nexport default class CategoryEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      category: '',\n      id: 0\n    };\n\n    this.categoryTitleChange = this.categoryTitleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    request\n        .post('https://react-tasklist-backend.herokuapp.com/categorys/category')\n        .type('form')\n        .send({\n          id: this.props.match.params.id\n        })\n        .end((err, res) => {\n          this.setState({id: res.body[0].id});\n          this.setState({category: res.body[0].title});\n        });\n  }\n\n  categoryTitleChange(event) {\n    this.setState({category: event.target.value});\n  }\n\n  handleSubmit(event) {\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/category/update')\n      .type('form')\n      .send({\n        id: this.state.id,\n        category: this.state.category\n      })\n      .end((err, res) => {\n        alert(\"カテゴリーを変更しました\");\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"category-editer-edit\">\n        <Link to=\"/category\">\n          <div class=\"back-area\">\n            くく\n          </div>\n        </Link>\n        <h1>EDIT CATEGORY</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            CategoryTitle:\n            <input type=\"text\" id=\"category\" name=\"category\" value={this.state.category} onChange={this.categoryTitleChange} />\n          </label>\n          <input type=\"submit\" value=\"変更\" />\n        </form>\n      </div>\n    );\n    document.getElementById('calendar-button')\n  }\n};\n","import React from \"react\";\nimport request from 'superagent';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nexport default class CategoryCreate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: ''\n    };\n\n    this.categoryTitleChange = this.categoryTitleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  categoryTitleChange(event) {\n    this.setState({title: event.target.value});\n  }\n\n  handleSubmit(event) {\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/category/insert')\n      .type('form')\n      .send({\n        title: this.state.title\n      })\n      .end((err, res) => {\n        window.location.href = \"/category\";\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"category-creator-wrapper\">\n        <Link to=\"/category\">\n          <div class=\"back-area\">\n            くく\n          </div>\n        </Link>\n        <h1>CREATE TASK</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label class=\"create-category-form\">\n            <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"カテゴリー名称\" value={this.state.title} onChange={this.categoryTitleChange} />\n          </label>\n          <input type=\"submit\" value=\"追加！\" />\n        </form>\n      </div>\n    );\n    document.getElementById('calendar-button')\n  }\n};\n","import React from \"react\";\nimport request from 'superagent';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst list = {\n    textDecoration: 'none',\n    borderStyle: 'none'\n};\n\nconst newTask = {\n    textDecoration: 'none',\n    color:'#000000',\n    borderStyle: 'none',\n    color:'#00c2ec',\n    border:'800'\n};\n\nexport default class CategoryList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        posts: [],\n        categorys: [],\n        nowCategory: 0\n    };\n\n    this.categoryDefault = this.categoryDefault.bind(this);\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\n    this.categoryChange = this.categoryChange.bind(this);\n\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/posts/category')\n      .type('form')\n      .send({\n        category: this.props.match.params.id\n      })\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({ posts });\n      });\n\n    request\n        .get('https://react-tasklist-backend.herokuapp.com/categorys')\n        .end((err, res) => {\n            var categorys = res.body;\n            this.setState({ categorys });\n        });\n\n  }\n\n  handleDelete(event) {\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/delete')\n      .type('form')\n      .send({\n        id: event.target.value\n      })\n      .end(() => {\n        window.location.reload();\n      });\n  }\n\n  categoryDefault(event){\n    request\n      .get('https://react-tasklist-backend.herokuapp.com/posts')\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  categoryChange(event){\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/posts/category')\n      .type('form')\n      .send({\n        category: event.target.value\n      })\n      .end((err, res) => {\n        var posts = res.body;\n        this.setState({posts: posts});\n      });\n  }\n\n  reload(){\n      window.location.reload();\n  }\n\n  handleChangeStatus(event){\n    var result = event.target.value.split('_');\n    var status = result[0];\n    var id = result[1];\n    var changeStatus = 0;\n    if (status == 0) {\n        changeStatus = 1;\n    } else if (status == 1) {\n        changeStatus = 0;\n    }\n    request\n      .post('https://react-tasklist-backend.herokuapp.com/update/status')\n      .type('form')\n      .send({\n        status: changeStatus,\n        id: id\n      })\n      .end((err, res) => {\n        window.location.reload();\n      });\n  }\n\n  render() {\n    return (\n        <div>\n            <div class=\"category-wrapper\">\n                <ul>\n                    <Link to=\"/\" style={list}>\n                        <li class=\"active-category\">\n                            全カテゴリを表示\n                            {/* <button type=\"submit\" onClick={this.categoryDefault}>全てのタスクを表示する</button> */}\n                        </li>\n                    </Link>\n                    {this.state.categorys.map(category => (\n                        <Link to={'/list/category/' + category.id} style={list} onClick={this.reload}>\n                            <li>\n                                {category.title}\n                                {/* <button type=\"submit\" value={category.id} onClick={this.categoryChange}>{category.title}</button> */}\n                            </li>\n                        </Link>\n                    ))}\n                    <Link to=\"/category\" style={list}>\n                        <li>\n                            + EDIT CATEGORY\n                        </li>\n                    </Link>\n                </ul>\n            </div>\n            <div class=\"tasklist-wrapper\">\n                <ul>\n                    <li class=\"task-wrapper new\">\n                        <div class=\"task-content\">\n                            <Link to=\"/create\" style={newTask}>+ NEW TASK</Link>\n                        </div>\n                    </li>\n                    {this.state.posts.map(post => (\n                        <li　key={post.id} class=\"task-wrapper\">\n                        { post.status === 0 && \n                            <div class=\"task-content yet\">\n                                <h3>{post.title}</h3>\n                                <p class=\"content\">{post.content}</p>\n                                <p class=\"limit_date yet\">limit : {post.limit_date}</p>\n                            </div> }\n                        { post.status === 1 && \n                            <div class=\"task-content done\">\n                                <h3>{post.title}</h3>\n                                <p class=\"content\">{post.content}</p>\n                                <p class=\"limit_date done\">limit : {post.limit_date}</p>\n                            </div> }\n                            <div class=\"task-buttons\">\n                                <ul>\n                                    <li>\n                                    <Link to={'/edit/' + post.id} style={list}><button class=\"button\">EDIT</button></Link>\n                                    </li>\n                                    <li>\n                                        <button class=\"button\" type=\"submit\" value={post.status + '_' + post.id} onClick={this.handleChangeStatus}>STATUS</button>\n                                    </li>\n                                    <li>\n                                        <button class=\"button\" type=\"submit\" value={post.id} onClick={this.handleDelete}>DELETE</button>\n                                    </li>\n                                </ul>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport List from './List';\nimport Header from './Header';\nimport Edit from './Edit';\nimport Create from './Create';\nimport Category from './Category';\nimport CategoryEdit from './CategoryEdit';\nimport CategoryCreate from './CategoryCreate';\nimport CategoryList from './CategoryList';\nimport '../css/style.css';\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n        <div>\n          <Header />\n          <Router>\n            <Route path='/' exact component={List}/>\n            <Route path='/edit/:id' exact component={Edit}/>\n            <Route path='/create' exact component={Create}/>\n            <Route path='/category' exact component={Category}/>\n            <Route path='/category/edit/:id' exact component={CategoryEdit}/>\n            <Route path='/category/create' exact component={CategoryCreate}/>\n            <Route path='/list/category/:id' exact component={CategoryList}/>\n          </Router>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./js/App\";\n\nReactDOM.render(<App />, document.getElementById(\"taskList\"));\n"],"sourceRoot":""}